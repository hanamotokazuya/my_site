{
  "data": [
    {
      "title": "Simulink Clone",
      "description": [
        "モデルベースデザインのためのブロック線図環境を提供するソフトウェアSimulinkのクローンサイトです。ブラウザ上でSimulinkのようにブロック線図を設計し、シミュレーションによる解析が行えます。",
        "　",
        "[制作理由]",
        "前職では、ソフトウェア開発の環境として、Matlab/Simulinkを用いていました。中でもSimulinkはモデルベースデザインのためのブロック線図環境を提供するソフトウェアで、グラフィカルにモデルを設計することができるツールです。しかし、Simulinkは有償ツールであり、個人で扱うには約40万円ほど費用がかかります。そこで、SimulinkのようなツールをWebで公開できれば、インストールなどを必要とせず、誰でも利用できて便利だと思い、制作しました。",
        "　",
        "[難しかったところ]",
        "<シミュレーションする際の計算ロジック>",
        "本アプリは、定数ブロック、四則演算ブロック、積分ブロックなどを用いて、複雑な計算を行うことができます。その際、どのようなロジックを設計すればよいか、また、どのようにオブジェクトを管理すれば、設計しやすいかなどを考える必要がありました。そこで、今回はベースとなるクラスを設計し、そのクラスを継承することで、さまざまなふるまいを持ったサブクラスを設計する方法をとりました。これにより、統一性のあるオブジェクトの設計が可能になりました。また、シミュレーションの計算では、入力をたどって順に計算する方法ではなく、出力側から入力側へ逆にたどり計算する方法をとりました。この方法の場合、全てのブロックは出力を計算するout()を持っているため、毎ステップ右から左へout()を呼び出すだけで実装することができ、ロジックのコード量を抑えることができます。このように、どういうオブジェクトクラスを設計すれば、拡張性、可読性、保守性を維持できるかというところを考え、工夫するところが難しかったです。",
        "　",
        "<描画用ブロックのオブジェクトクラスの設計>",
        "ブロック線図を扱った便利なライブラリがないか調査したところ、使えそうなライブラリはすべて商用ライセンスであり、扱いに注意が必要であったため、今回はcanvasの拡張ライブラリであるfabric.jsを用いることにしました。fabric.jsはcanvas内の要素をオブジェクトとして提供するライブラリです。汎用的なライブラリである一方、1からオブジェクトを設計する必要があったため、fabric.jsで提供されているクラスをカスタマイズして、専用のクラスを設計するところが難しかったです。",
        "　",
        "<ブロック同士をつなぐ際のリンクの描画方法>",
        "ブロック同士をつなぐ場合、真っ先に考えられる方法は、接続元と接続先の2点間で直線を引く方法です。しかし、その方法では、フィードバックループなどある設計をした場合などで、見栄えが非常に悪くなります。そこで、今回採用した方法は、接続元と接続先の2点のほかに、3点のパスを追加し、計5点で直線を引く方法にしました。5点間で線を引くことにより、フィードバックループなどある設計においても見栄えを維持することができます。その場合、追加する3点の座標の計算を適切に行う必要があります。また、線をつないだ後にブロックを動かしたり、拡大・縮小した際にも線が崩れることなく自動で線を引き直すロジックを設計する必要があり、その点が難しかったです。",
        "　",
        "[使用技術]",
        "TypeScript 4.6.4",
        "React.js 18.1.0",
        "Next.js 12.1.6",
        "fabric.js 5.2.1",
        "charts.js 3.7.1",
        "tailwindcss 3.0.24",
        "Jest 28.1.0"
      ],
      "siteUrl": "https://simulink-clone.vercel.app/",
      "srcCodeUrl": "https://github.com/hanamotokazuya/simulink-clone"
    },
    {
      "title": "マインスイーパー",
      "description": [
        "昔ながらのクラシックベースマインスイーパーです。",
        "　",
        "[制作理由]",
        "私は個人開発で、ファミコンウォーズのようなゲームをWebアプリで作りたいと考えています。ファミコンウォーズは、盤面上に歩兵などのユニットを配置し、操作して、敵陣を取りにいくターン制の戦争と将棋をかけ合わせたようなゲームです。そのゲーム制作の前段階として、同じ盤面を操作するゲームであり、かつ私自身よく遊んだことのあるマインスイーパーを題材にゲームを作ってみようと思い、制作しました。",
        "　",
        "[難しかったところ]",
        "<爆弾の生成タイミング>",
        "ゲーム最初の１手目のセルには爆弾を配置されていないことを保証するために、１手目が行われたときに爆弾を生成するロジックを構築するところが難しかったです。",
        "　",
        "<周辺セルの自動探索>",
        "数字の書かれていないセルを開いたときには、通常のマインスイーパーは周辺を探索し、爆弾が存在しないところを自動で開くロジックが組み込まれていますが、本アプリもそのロジックを実装しました。その際、どういったロジックで設計すれば、簡潔に記述できるかといった観点から、引数を参照渡しにして、関数を再帰的に呼び出す方法を採用しました。その結果、簡潔にコードを記述することができましたが、そのロジックを形にするところが難しかったです。",
        "　",
        "[使用技術]",
        "TypeScript 4.6.4",
        "React.js 18.1.0",
        "Next.js 12.1.5",
        "tailwindcss 3.0.24",
        "Jest 28.1.0"
      ],
      "siteUrl": "https://minesweeper-vert.vercel.app/",
      "srcCodeUrl": "https://github.com/hanamotokazuya/minesweeper"
    },
    {
      "title": "書籍管理アプリ",
      "description": [
        "初めて作った作品です。これは、書籍の表紙画像をアップロードすることで、これまでに購入した書籍を管理するアプリです。これまでに購入した書籍をカテゴリー毎に分けることで、どういう本をよく購入しているかを俯瞰できます。",
        "　",
        "[制作理由]",
        "私は気になる技術の参考書籍を読むことが好きで、毎年20冊以上読んでいます。これまでの購入書籍を管理して可視化できるアプリがあったらいいなと思い制作しました。",
        "　",
        "[難しかったところ]",
        "<AWS S3との連携>",
        "本アプリは画像を保存するストレージが必要であったため、そのストレージとしてAWS S3を採用しました。また、バックエンド側で、ストレージに保存した画像のURLをデータベースに保存することで、ブラウザ上で画像を表示するようにしました。その際、AWSの設定や、データベースとAWS S3との連携部分が難しかったです。",
        "　",
        "[使用技術]",
        "TypeScript 4.6.3",
        "React 18.0.0",
        "recharts.js 2.1.9",
        "styled-components 5.3.5",
        "Ruby 3.1.1",
        "Ruby on Rails 6.1.5",
        "MySQL 8.0",
        "Heroku",
        "AWS S3"
      ],
      "siteUrl": "https://purchased-book-app.herokuapp.com/",
      "srcCodeUrl": "https://github.com/hanamotokazuya/purchased_book_app"
    },
    {
      "title": "ポートフォリオ",
      "description": [
        "本サイトです。Reactの勉強を兼ねて制作しました。React/TypeScriptで構築し、サーバはNetlifyを利用しています。"
      ],
      "siteUrl": "https://kah-site.netlify.app",
      "srcCodeUrl": "https://github.com/hanamotokazuya/my_site"
    }
  ]
}
